#!/bin/bash

#color codes
RED='\033[1;31m'
YELLOW='\033[1;33m'
BLUE="\\033[38;5;27m"
SEA="\\033[38;5;49m"
GREEN='\033[1;32m'
CYAN='\033[1;36m'
NC='\033[0m'

#emoji codes
CHECK_MARK="${GREEN}\xE2\x9C\x94${NC}"
X_MARK="${RED}\xE2\x9C\x96${NC}"
PIN="${RED}\xF0\x9F\x93\x8C${NC}"
CLOCK="${GREEN}\xE2\x8C\x9B${NC}"
ARROW="${SEA}\xE2\x96\xB6${NC}"
BOOK="${RED}\xF0\x9F\x93\x8B${NC}"
HOT="${ORANGE}\xF0\x9F\x94\xA5${NC}"
WARNING="${RED}\xF0\x9F\x9A\xA8${NC}"
RIGHT_ANGLE="${GREEN}\xE2\x88\x9F${NC}"

# Paths
CONFIG_DIR="$HOME/.config/dotfiles"
VAULT_SECRET="$HOME/.ansible-vault/vault.secret"
DOTFILES_DIR="$HOME/.dotfiles"
SSH_DIR="$HOME/.ssh"
IS_FIRST_RUN="$HOME/.dotfiles_run"

# Install Homebrew
  echo -e "${ARROW} ${CYAN}Homebrew...${NC}"
if [[ $(brew --version) ]] ; then
    echo -e "   ${RIGHT_ANGLE} ${CYAN}Homebrew is installed${NC}"
else
    echo -e "   ${RIGHT_ANGLE} ${CYAN}Attempting to install Homebrew${NC}"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Install Ansible
echo -e "${ARROW} ${CYAN}Ansible...${NC}"
if ! command -v ansible > /dev/null 2>&1; then
    echo -e "   ${RIGHT_ANGLE} ${CYAN}Attempting to install Ansible${NC}"
    brew install ansible 2>&1 > /dev/null
fi

# Clone repository
if ! [[ -d "$DOTFILES_DIR" ]]; then
    echo -e "${ARROW} ${CYAN}Cloning repository: ${YELLOW}github.com/codepainter/dotfiles-v2${NC}"
    git clone --quiet "https://github.com/codepainter/dotfiles-v2.git" "$DOTFILES_DIR" 2>&1 > /dev/null
else
    echo -e "${ARROW} ${CYAN}Updating repository: ${YELLOW}github.com/codepainter/dotfiles-v2${NC}"
    git -C "$DOTFILES_DIR" pull --quiet > /dev/null
fi

# Create path
pushd "$DOTFILES_DIR" 2>&1 > /dev/null

# Update Galaxy
echo -e "${ARROW} ${CYAN}Updating Galaxy...${NC}"
ansible-galaxy install -r requirements.yml 2>&1 > /dev/null

# Run playbook
echo -e "${ARROW} ${CYAN}Running playbook...${NC}"
if [[ -f $VAULT_SECRET ]]; then
    echo -e "${ARROW} ${CYAN}Using vault config file...${NC}"
    ansible-playbook --vault-password-file $VAULT_SECRET "$DOTFILES_DIR/main.yml" "$@"
else
    echo -e "${WARNING} ${CYAN}Vault config file not found...${NC}"
    ansible-playbook "$DOTFILES_DIR/main.yml" "$@"
fi

popd 2>&1 > /dev/null

if ! [[ -f "$IS_FIRST_RUN" ]]; then
    echo -e "${CHECK_MARK} ${GREEN}First run complete!${NC}"
    echo -e "${ARROW} ${CYAN}Please reboot your computer to complete the setup.${NC}"
    touch "$IS_FIRST_RUN"
fi